---
title: '[DR] Kick Drum'
eleventyNavigation:
  order: 1
state:
  synth:
    pitchDecay: 0.005
    octaves: 10
    envelope:
      decay: 0.04
      sustain: 0
      release: 0.04
---

{% from "macros/form.njk" import range %}
{% from "macros/tone.njk" import amplitudeEnvelope, omniOscillator %}
{% from "macros/nexus.njk" import piano %}

<div class="grid">
  {{ omniOscillator('Oscillator', 'synth-oscillator') }}
  {{ amplitudeEnvelope('Envelope', 'synth-envelope', decay=state.synth.envelope.decay, sustain=state.synth.envelope.sustain, release=state.synth.envelope.release) }}

  {% card 'Other', 'other' %}
    {{ range('Pitch decay', 'synth-pitch-decay', state.synth.pitchDecay, max=1, step=0.001) }}
    {{ range('Octaves', 'synth-octaves', state.synth.octaves, max=20) }}
  {% endcard %}
</div>

{{ piano('piano') }}

{% js %}
  import { MembraneSynth, Midi, start } from 'https://cdn.skypack.dev/tone';
  import { createAmplitudeEnvelope, createOmniOscillator, createPiano } from '../../public/lib/nexus-tone-components.js';

  const options = {{ state | dump | safe }};

  const synth = new MembraneSynth(options.synth).toDestination();

  const onMidi = ([status, data0, data1]) => {
    const message = Math.floor(status / 16);
    const channel = status % 16;

    switch (message) {
      // note on
      case 9: {
        const freq = Midi(data0).toFrequency();
        synth.triggerAttack(freq, '+0', data1 / 127);
        break;
      }
      // note off
      case 8: {
        synth.triggerRelease();
        break;
      }
    }
  };

  createOmniOscillator('#synth-oscillator', value => {
    synth.set({ oscillator: value });
  });

  createAmplitudeEnvelope('#synth-envelope', value => {
    synth.set({ envelope: value });
  });

  document.querySelector('#synth-pitch-decay').addEventListener('change', e => {
    synth.set({ pitchDecay: +e.target.value });
  });

  document.querySelector('#synth-octaves').addEventListener('change', e => {
    synth.set({ octaves: +e.target.value });
  });

  createPiano('#piano', onMidi);

  document.addEventListener('click', async () => {
    await start();
    console.log('audio context resumed');
  }, { once: true });
{% endjs %}
